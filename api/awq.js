export default async function handler(req, res) {
  if (req.method !== "POST") {
    return res.status(405).json({ ok: false, error: "Method not allowed" });
  }

  try {
    const { initData, bags, comment } = req.body;

    if (!initData || !bags) {
      return res.status(400).json({ ok: false, error: "bad args" });
    }

    // –†–∞–∑–±–∏—Ä–∞–µ–º initData
    const params = new URLSearchParams(initData);
    const userRaw = params.get("user");
    const user = userRaw ? JSON.parse(userRaw) : null;

    // –ì–æ—Ç–æ–≤–∏–º —Ç–µ–∫—Å—Ç –∑–∞—è–≤–∫–∏
    const text = `
üìù –ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞!
üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @${user?.username || "‚Äî"}
üìõ –ò–º—è: ${user?.first_name || ""} ${user?.last_name || ""}
üÜî ID: ${user?.id || "‚Äî"}

üì¶ –ö–æ–ª-–≤–æ —Å—É–º–æ–∫: ${bags}
üí¨ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ${comment || "‚Äî"}
    `;

    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Telegram
    const BOT_TOKEN = process.env.BOT_TOKEN;
    const CHAT_ID = process.env.CHAT_ID;

    const tgRes = await fetch(`https://api.telegram.org/bot${BOT_TOKEN}/sendMessage`, {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({
        chat_id: CHAT_ID,
        text,
        parse_mode: "HTML",
      }),
    });

    const tgData = await tgRes.json();

    if (!tgData.ok) {
      console.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram:", tgData);
      return res.status(500).json({ ok: false, error: "telegram error", details: tgData });
    }

    return res.status(200).json({ ok: true });
  } catch (err) {
    console.error("–û—à–∏–±–∫–∞:", err);
    return res.status(500).json({ ok: false, error: "server error" });
  }
}

